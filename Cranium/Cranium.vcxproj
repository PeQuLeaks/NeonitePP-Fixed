<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Prod|x64">
      <Configuration>Prod</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{DAAF5B8E-D234-4154-B5EB-DF0D7A02DFC3}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Cranium</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ProjectName>Cranium</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Prod|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.props" />
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Prod|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)bin\</OutDir>
    <IntDir>obj\Debug\</IntDir>
    <IncludePath>$(IncludePath)</IncludePath>
    <LibraryPath>$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(IncludePath)</IncludePath>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <OutDir>$(SolutionDir)bin\</OutDir>
    <IntDir>obj\Release\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Prod|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(IncludePath)</IncludePath>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <OutDir>$(SolutionDir)bin\</OutDir>
    <IntDir>obj\Release\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level1</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <AdditionalLibraryDirectories>$(SolutionDir)Cranium\cryptolens</AdditionalLibraryDirectories>
      <AdditionalDependencies>Cryptolens.lib</AdditionalDependencies>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level1</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <AdditionalDependencies>Cryptolens.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)Cranium\cryptolens</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Prod|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level1</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>PROD;NDEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpplatest</LanguageStandard>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <AdditionalDependencies>Cryptolens.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)Cranium\cryptolens</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="cryptolens\ActivateError.hpp" />
    <ClInclude Include="cryptolens\ActivationData.hpp" />
    <ClInclude Include="cryptolens\api.hpp" />
    <ClInclude Include="cryptolens\base64.hpp" />
    <ClInclude Include="cryptolens\basic_Cryptolens.hpp" />
    <ClInclude Include="cryptolens\basic_Error.hpp" />
    <ClInclude Include="cryptolens\basic_SKM.hpp" />
    <ClInclude Include="cryptolens\Configuration_Unix.hpp" />
    <ClInclude Include="cryptolens\Configuration_Windows.hpp" />
    <ClInclude Include="cryptolens\core.hpp" />
    <ClInclude Include="cryptolens\cryptolens_internals.hpp" />
    <ClInclude Include="cryptolens\Customer.hpp" />
    <ClInclude Include="cryptolens\DataObject.hpp" />
    <ClInclude Include="cryptolens\Error.hpp" />
    <ClInclude Include="cryptolens\LicenseKey.hpp" />
    <ClInclude Include="cryptolens\LicenseKeyChecker.hpp" />
    <ClInclude Include="cryptolens\LicenseKeyInformation.hpp" />
    <ClInclude Include="cryptolens\MachineCodeComputer_caching.hpp" />
    <ClInclude Include="cryptolens\MachineCodeComputer_COM.hpp" />
    <ClInclude Include="cryptolens\MachineCodeComputer_static.hpp" />
    <ClInclude Include="cryptolens\RawLicenseKey.hpp" />
    <ClInclude Include="cryptolens\RequestHandler_curl.hpp" />
    <ClInclude Include="cryptolens\RequestHandler_v20190401_to_v20180502.hpp" />
    <ClInclude Include="cryptolens\RequestHandler_WinHTTP.hpp" />
    <ClInclude Include="cryptolens\ResponseParser_ArduinoJson5.hpp" />
    <ClInclude Include="cryptolens\SignatureVerifier_CryptoAPI.hpp" />
    <ClInclude Include="cryptolens\SignatureVerifier_OpenSSL.hpp" />
    <ClInclude Include="cryptolens\SignatureVerifier_v20190401_to_v20180502.hpp" />
    <ClInclude Include="curl.h" />
    <ClInclude Include="curlhooks.h" />
    <ClInclude Include="curlver.h" />
    <ClInclude Include="detours.h" />
    <ClInclude Include="enums.h" />
    <ClInclude Include="events.h" />
    <ClInclude Include="finder.h" />
    <ClInclude Include="framework.h" />
    <ClInclude Include="gui\gui.h" />
    <ClInclude Include="gui\ImGui\imconfig.h" />
    <ClInclude Include="gui\ImGui\imgui.h" />
    <ClInclude Include="gui\ImGui\imgui_impl_dx11.h" />
    <ClInclude Include="gui\ImGui\imgui_impl_win32.h" />
    <ClInclude Include="gui\ImGui\imgui_internal.h" />
    <ClInclude Include="gui\ImGui\imstb_rectpack.h" />
    <ClInclude Include="gui\ImGui\imstb_textedit.h" />
    <ClInclude Include="gui\ImGui\imstb_truetype.h" />
    <ClInclude Include="gui\kiero.h" />
    <ClInclude Include="hooks.h" />
    <ClInclude Include="kismet.h" />
    <ClInclude Include="minhook\MinHook.h" />
    <ClInclude Include="mods.h" />
    <ClInclude Include="neonitelogo.h" />
    <ClInclude Include="neoroyale.h" />
    <ClInclude Include="pawn.h" />
    <ClInclude Include="pch.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="server.h" />
    <ClInclude Include="skCryptor.h" />
    <ClInclude Include="structs.h" />
    <ClInclude Include="system.h" />
    <ClInclude Include="ue4.h" />
    <ClInclude Include="url.h" />
    <ClInclude Include="util.h" />
    <ClInclude Include="veh.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="dllmain.cpp" />
    <ClCompile Include="gui\ImGui\imgui.cpp" />
    <ClCompile Include="gui\ImGui\imgui_draw.cpp" />
    <ClCompile Include="gui\ImGui\imgui_impl_dx11.cpp" />
    <ClCompile Include="gui\ImGui\imgui_impl_win32.cpp" />
    <ClCompile Include="gui\ImGui\imgui_widgets.cpp" />
    <ClCompile Include="gui\kiero.cpp" />
    <ClCompile Include="pch.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="Resource.rc" />
  </ItemGroup>
  <ItemGroup>
    <Library Include="cryptolens\Cryptolens.lib" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.targets" />
    <Import Project="..\packages\Detours.4.0.1\build\native\Detours.targets" Condition="Exists('..\packages\Detours.4.0.1\build\native\Detours.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Detours.4.0.1\build\native\Detours.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Detours.4.0.1\build\native\Detours.targets'))" />
  </Target>
</Project>